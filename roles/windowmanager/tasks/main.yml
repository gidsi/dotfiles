- name: Install packages
  pacman:
    name:
      - i3lock
      - py3status
      - imagemagick
      - rofi
      - i3status
      - feh
      - scrot
      - ttf-font-awesome
      - xorg-xrandr
      - acpilight
      - alacritty
      - xss-lock
      - picom
    state: present
  become: true

- name: Install from aur
  aur:
    name:
      - i3-gaps
      - unclutter-xfixes-git
      - powerline-fonts-git
      - rofi-greenclip
      - wpa_actiond
      - google-chrome-dev
      - autorandr
  become_user: aur_builder
  become_method: sudo
  become: true

- name: Create screenshot folder
  file:
    path: "{{ ansible_env.HOME }}/screenshots"
    state: directory
    mode: 0700

- name: Ensure there is a ~/.config/rofi folder
  file:
    path: "{{ ansible_env.HOME }}/.config/rofi"
    recurse: yes

- name: Copy rofi theme
  copy:
    src: "{{ ansible_env.HOME }}/.base16colors/templates/rofi/themes/base16-{{ theme }}.rasi"
    dest: "{{ ansible_env.HOME }}/.config/rofi/base16-{{ theme }}.rasi"
    remote_src: yes

- name: Ensure there is a ~/.config/i3 and a config.d folder
  file:
    path: "{{ ansible_env.HOME }}/.config/i3/config.d"
    state: directory
    recurse: yes
    mode: 0700
  tags:
    - "i3config"

- name: Copy background and screenlock
  copy:
    src: files/screenlock
    dest: "{{ ansible_env.HOME }}/.config/i3/"

- name: Read i3 color file
  slurp:
    src: "{{ ansible_env.HOME }}/.base16colors/templates/i3/colors/base16-{{ theme }}.config"
  register: i3BaseColorBase64
  tags:
    - "i3config"

- name: Copy i3 config
  template:
    src: i3config.j2
    dest: "{{ ansible_env.HOME }}/.config/i3/config"
  vars:
    i3BaseColor: "{{ i3BaseColorBase64['content'] | b64decode }}"
  tags:
    - "theme"
    - "i3config"

- name: Copy i3 config.d stuff
  template:
    src: "i3config/{{ item }}.j2"
    dest: "{{ ansible_env.HOME }}/.config/i3/config.d/{{ item }}"
  with_items:
    - "bar.conf"
    - "colors.conf"
    - "i3gap.conf"
    - "navigation.conf"
    - "resize.conf"
  vars:
    i3BaseColor: "{{ i3BaseColorBase64['content'] | b64decode }}"
  tags:
    - "i3config"

- name: Create i3status
  template:
    src: i3status.j2
    dest: "{{ ansible_env.HOME }}/.i3status.conf"
  tags:
    - i3status

- name: Link dircolors
  copy:
    src: dircolors
    dest: "{{ ansible_env.HOME }}/.dircolors"

- name: Link zlogin
  copy:
    src: zlogin
    dest: "{{ ansible_env.HOME }}/.zlogin"

- name: Link xinit
  copy:
    src: xinitrc
    dest: "{{ ansible_env.HOME }}/.xinitrc"

- name: Copy brightness script
  copy:
    src: brightness
    dest: "/usr/local/bin/brightness"
    mode: 0755
  become: true

- name: Copy volume script
  copy:
    src: volume
    dest: "/usr/local/bin/volume"
    mode: 0755
  become: true

- name: Enable wireless auto
  systemd:
    name: netctl-auto@{{ wlan_device }}
    enabled: yes
  when: wlan_device is defined

- name: Copy rofi-gopass
  copy:
    src: "rofi-gopass"
    dest: "/usr/local/bin"
  become: true

- name: Ensure there is a ~/.config/alacritty folder
  file:
    path: "{{ ansible_env.HOME }}/.config/alacritty"
    recurse: yes

- name: Read alacritty color file
  slurp:
    src: "{{ ansible_env.HOME }}/.base16colors/templates/alacritty/colors/base16-{{ theme }}.yml"
  register: alacrittyColorBase64

- name: Configure alacritty
  template:
    src: alacritty.yml.j2
    dest: "{{ ansible_env.HOME }}/.config/alacritty/alacritty.yml"
  vars:
    alacrittyBase16Colors: "{{ alacrittyColorBase64['content'] | b64decode }}"

- name: Configure greenclip
  copy:
    src: greenclip.toml
    dest: "{{ ansible_env.HOME }}/.config/greenclip.toml"

- name: Install greenclip service
  systemd:
    name: greenclip
    daemon_reload: yes
    state: started
    scope: user
    enabled: yes

- name: Configure gpg pinentry
  copy:
    src: gpg-agent.conf
    dest: "{{ ansible_env.HOME }}/.gnupg/gpg-agent.conf"
